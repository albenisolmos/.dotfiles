local M = {}
SETTINGS = {}
local opt = vim.o
local calls = {}
local config = {
	status = "medium",
	border = "rounded",
	lsp_clients = {
		lua_ls = {
			settings = {
				Lua = {
					completion = {
						enable = true,
						callSnippet = "Both",
					},
				},
			},
		},
	},
	_hide_border = true,
}
SETTINGS = config

local function set_status(statusln, cmdln)
	opt.laststatus = statusln
	opt.cmdheight = cmdln

	if cmdln > 0 then
		opt.showmode = true
	end

	if statusln == 0 then
		vim.api.nvim_set_hl(0, "Statusline", { link = "VertSeparator" })
		vim.api.nvim_set_hl(0, "StatuslineNC", { link = "VertSeparator" })
		vim.cmd("set statusline=%{repeat('â”€',winwidth('.'))}")
	end
end

local status = {
	minimal = { 0, 1 },
	medium = { 3, 0 },
	full = { 3, 1 },
}

function M.init(args)
	for key, value in pairs(args) do
		assert(config[key] ~= nil)
		config[key] = value
	end

	if config["status"] then
		table.insert(calls, function()
			set_status(unpack(status[args.status]))
		end)
	end

	if SETTINGS.border == "margin" then
		SETTINGS.border = "rounded"
		SETTINGS._hide_border = true
	end

	require("config.keymaps")
	require("config.lazy")
	require("config.configs")
	require("config.commands")
end

function M.end_init()
	for _, call in pairs(calls) do
		call()
	end
end

return setmetatable(M, { __call = M.init })
